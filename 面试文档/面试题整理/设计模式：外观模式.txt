设计模式：外观（Facade）模式
一、前言

  外观模式是一种非常简单的模式，简单到我们经常都会使用，比如对于类A和B，如果两者需要交互，经过一定的处理过程才能实现某一个具体的功能，
  那么我们可以将这个处理的过程定义为一个新的类，然后在这个类里面将类A和B的处理步骤整合在一起，对于外界我们只暴露新的类中的这个接口，
  这样代码的复用性就非常的好了，可以将这些代码作为组件去让其他程序去使用，这在我们的开发之中是非常常见的。
  甚至我们可以将抽象工厂模式中创建产品的接口当做外观模式的一种应用，
  这也是一种整合。对于模板方法，其实我们也是在父类之中面向抽象编程的，将一些关系整合起来，不过差别还是非常明显的，在外观模式中没有继承关系，
  是新建一个类来整合其它类之间复杂的相互依赖，调用等关系，因此外观模式比较直观。